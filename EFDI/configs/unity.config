<?xml version="1.0" encoding="utf-8" ?>
<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
  <assembly name="EFDI.Services" />
  <assembly name="EFDI.Data" />
  <assembly name="EFDI.Domain" />
  <assembly name="EFDI.Repository" />

  <!--Namespace of EFDIDb.edmx-->
  <namespace name="EFDIModel" />
  <namespace name="EFDI.Data.Context" />

  <namespace name="EFDI.Data.Models" />
  <namespace name="EFDI.Data.Designer" />
  <namespace name="EFDI.Data.Interfaces" />

  <namespace name="EFDI.Domain.Models" />
  <namespace name="EFDI.Domain.Mapping" />
  <namespace name="EFDI.Domain.Mapping.Base" />
  <namespace name="EFDI.Domain.Mapping.Interfaces" />
  <namespace name="EFDI.Domain.Mapping.Interfaces.Facades" />
  <namespace name="EFDI.Domain.Mapping.Interfaces.Mappers" />
  <namespace name="EFDI.Domain.Mapping.ModelMappers" />
  <namespace name="EFDI.Domain.Mapping.RepositoryFacades" />
  
  <namespace name="EFDI.Repository.Contracts" />
  <namespace name="EFDI.Repository.Implementation" />

  <namespace name="EFDI.Services.Base.Contracts" />
  <namespace name="EFDI.Services.Base.Implementations" />
  <namespace name="EFDI.Services.Contracts" />
  <namespace name="EFDI.Services.Implementations" />
  
  <!--NOTE: alias is optional. code are still working even you don't declare any alias-->

  <!-- ALIAS BASE CLASSES -->
  <alias alias="IRepositoryFacadeBase" type="EFDI.Domain.Mapping.Interfaces.Facades.IRepositoryFacadeBase`1, EFDI.Domain.Mapping" />
  <alias alias="RepositoryFacadeBase" type="EFDI.Domain.Mapping.Base.RepositoryFacadeBase`2, EFDI.Domain.Mapping" />
                                        
  <alias alias="IModelMapperBase" type="EFDI.Domain.Mapping.Interfaces.Mappers.IModelMapperBase`2, EFDI.Domain.Mapping" />
  <alias alias="ModelMapperBase" type="EFDI.Domain.Mapping.Base.ModelMapperBase`2, EFDI.Domain.Mapping" />
  
  <alias alias="IRecipeService" type="EFDI.Services.Contracts.IRecipeService, EFDI.Services.Contracts" />
  <alias alias="RecipeService" type="EFDI.Services.Implementations.RecipeService, EFDI.Services.Implementations" />

  <alias alias="ICategoryService" type="EFDI.Services.Contracts.ICategoryService, EFDI.Services.Contracts" />
  <alias alias="CategoryService" type="EFDI.Services.Implementations.CategoryService, EFDI.Services.Implementations" />

  <alias alias="IGenericService" type="EFDI.Services.Contracts.IGenericService`1, EFDI.Services.Contracts" />
  <alias alias="GenericRecipeService" type="EFDI.Services.Implementations.GenericRecipeService, EFDI.Services.Implementations" />
  <container>
    <!-- CONTEXT, UNITOFWORK, & SERVICEBASE -->
    <register type="IDbContext" mapTo="EFDIDatabaseContainer">
      <constructor>
        <param name="connectionString" value="name=EFDIDatabaseConnString"></param>
      </constructor>
    </register>
    <register type="IUnitOfWork" mapTo="UnitOfWork" />
    
    <!-- REPOSITORY FACADES -->
    <register type="IRepositoryFacadeBase[RecipeDomain]" mapTo="RecipeRepositoryFacade" />

    <!-- MODEL MAPPERS -->
    <register type="IModelMapperBase[RecipeDomain,Recipe]" mapTo="RecipeMapper" />

    <!-- FOR ACCESS TOOLS -->
    <register type="EFDI.Data.Interfaces.IDbContext, EFDI.Data" mapTo="EFDI.Data.Context.EFDIDatabaseContainer, EFDI.Data">
      <constructor>
        <param name="connectionString" value="name=EFDIDatabaseConnString"></param>
      </constructor>
    </register>

    <!--<register type="EFDI.Domain.Mapping.Interfaces.Mappers.IModelMapperBase[RecipeDomain, Recipe], EFDI.Domain.Mapping" mapTo="EFDI.Domain.Mapping.ModelMappers, EFDI.Domain.Mapping" />-->

    <register type="IRecipeService" mapTo="RecipeService" />
    <register type="ICategoryService" mapTo="CategoryService" />
    <register type="IGenericService`1" mapTo="GenericRecipeService" />
  </container>
</unity>
